# vm_management_playbook.yml
---
- name: Manage ESXi Virtual Machine
  hosts: localhost
  gather_facts: false
  collections:
    - community.vmware
  vars:
    esxi_host: "192.168.223.131"
    vm_name: "linux-testmac"
    validate_certs: false
    datacenter: "ha-datacenter"
    shutdown_timeout: 300  # 5 minutes timeout for clean shutdown

  tasks:
    # ========== CONNECTION VERIFICATION ==========
    - name: Verify ESXi connection
      vmware_vm_info:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
      register: connection_test
      tags: always

    - name: Fail if connection failed
      ansible.builtin.fail:
        msg: "ESXi connection failed: {{ connection_test.msg | default('Unknown error') }}"
      when: connection_test.failed | default(false)
      tags: always

    # ========== VM TOOLS VERIFICATION ==========
    - name: Get detailed VM info
      vmware_guest_info:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        folder: "/{{ datacenter }}/vm"
        name: "{{ vm_name }}"
      register: vm_info
      tags: info

    - name: Verify VMware Tools status
      ansible.builtin.assert:
        that:
          - vm_info.instance.guest_tools_status == 'guestToolsRunning'
          - vm_info.instance.guest_tools_version == '11269'
        fail_msg: "VMware Tools not running or incorrect version"
        success_msg: "VMware Tools running (v{{ vm_info.instance.guest_tools_version }})"
      tags: tools-check

    # ========== POWER MANAGEMENT ==========
    - name: Clean shutdown sequence
      block:
        - name: Attempt clean shutdown (VMware Tools)
          vmware_guest_powerstate:
            hostname: "{{ esxi_host }}"
            username: "{{ vault_esxi_user }}"
            password: "{{ vault_esxi_pass }}"
            validate_certs: "{{ validate_certs }}"
            folder: "/{{ datacenter }}/vm"
            name: "{{ vm_name }}"
            state: powered-off
            state_change_timeout: "{{ shutdown_timeout }}"
            force: false
          register: shutdown_attempt
          ignore_errors: true

        - name: Force shutdown if clean failed
          vmware_guest_powerstate:
            hostname: "{{ esxi_host }}"
            username: "{{ vault_esxi_user }}"
            password: "{{ vault_esxi_pass }}"
            validate_certs: "{{ validate_certs }}"
            folder: "/{{ datacenter }}/vm"
            name: "{{ vm_name }}"
            state: powered-off
            force: true
          when: shutdown_attempt is failed
      when: vm_info.instance.power_state == 'poweredOn'
      tags: power

    # ========== VM CONFIGURATION ==========
    - name: Update VM configuration
      vmware_guest:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        folder: "/{{ datacenter }}/vm"
        name: "{{ vm_name }}"
        hardware:
          memory_mb: 2048  # Example: Set to 2GB
          num_cpus: 2      # Example: Set to 2 vCPUs
          version: 19      # VM hardware version (ESXi 8.0 compatible)
      tags: config

    # ========== POWER ON ==========
    - name: Power on VM
      vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        folder: "/{{ datacenter }}/vm"
        name: "{{ vm_name }}"
        state: powered-on
        state_change_timeout: 120
      when: vm_info.instance.power_state == 'poweredOff'
      tags: power
