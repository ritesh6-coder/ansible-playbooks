---
- name: Rename Virtual Machine on ESXi Host
  hosts: localhost
  gather_facts: false
  collections:
    - community.vmware
  vars:
    esxi_host: "192.168.223.131"  # Replace with your ESXi host IP if different
    old_vm_name: "linux-testmac"
    new_vm_name: "linux-test-renamed"
    validate_certs: false

  tasks:
    - name: Get VM info
      community.vmware.vmware_vm_info:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
      register: vm_info
      tags: always

    - name: Fail if VM not found
      ansible.builtin.fail:
        msg: "VM '{{ old_vm_name }}' not found on {{ esxi_host }}"
      when: not (vm_info.virtual_machines | selectattr('guest_name', 'equalto', old_vm_name) | list)
      tags: check

    - name: Set VM folder
      set_fact:
        vm_folder: "{{ (vm_info.virtual_machines | selectattr('guest_name', 'equalto', old_vm_name) | first).hw_folder }}"

    - name: Power off VM if running
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        folder: "{{ vm_folder }}"
        name: "{{ old_vm_name }}"
        state: powered-off
      when: (vm_info.virtual_machines | selectattr('guest_name', 'equalto', old_vm_name) | first).power_state == 'poweredOn'

    - name: Rename VM
      community.vmware.vmware_guest:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        folder: "{{ vm_folder }}"
        name: "{{ old_vm_name }}"
        new_name: "{{ new_vm_name }}"

    - name: Restore power state if changed
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        folder: "{{ vm_folder }}"
        name: "{{ new_vm_name }}"
        state: powered-on
      when: (vm_info.virtual_machines | selectattr('guest_name', 'equalto', old_vm_name) | first).power_state == 'poweredOn'
