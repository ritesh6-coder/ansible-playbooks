---
- name: Rename VM on ESXi Host
  hosts: localhost
  gather_facts: false
  collections:
    - community.vmware
  vars:
    esxi_host: "192.168.223.131"
    vm_name: "linux-testmac"
    new_vm_name: "linux-test-renamed"
    validate_certs: false

  tasks:
    - name: Validate ESXi connection
      vmware_vm_info:
        hostname: "{{ esxi_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ validate_certs }}"
      register: connection_test
      changed_when: false

    - name: Fail if connection failed
      ansible.builtin.fail:
        msg: "Failed to connect to ESXi host {{ esxi_host }}"
      when: connection_test.failed

    - name: Get current VM info
      vmware_vm_info:
        hostname: "{{ esxi_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ validate_certs }}"
        vm_name: "{{ vm_name }}"
      register: vm_info

    - name: Verify VM exists
      ansible.builtin.fail:
        msg: "VM {{ vm_name }} not found on {{ esxi_host }}"
      when: vm_info.virtual_machines | length == 0

    - name: Power off VM if running
      vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ vm_name }}"
        state: powered-off
      register: power_state
      when: vm_info.virtual_machines[0].power_state == 'poweredOn'

    - name: Rename VM
      vmware_guest:
        hostname: "{{ esxi_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ vm_name }}"
        new_name: "{{ new_vm_name }}"
        state: present
      register: rename_result

    - name: Show rename results
      ansible.builtin.debug:
        var: rename_result

    - name: Power on VM if it was running
      vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ new_vm_name }}"
        state: powered-on
      when: 
        - power_state is defined
        - power_state.changed
