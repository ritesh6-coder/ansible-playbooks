# rename_vm_esxi.yml
---
- name: Rename Virtual Machine on ESXi Host
  hosts: localhost
  gather_facts: false
  collections:
    - community.vmware
  vars:
    esxi_host: "192.168.223.131"  # Replace with your ESXi host IP if different
    old_vm_name: "linux-testmac"
    new_vm_name: "linux-test-renamed"
    validate_certs: false
    datacenter: "ha-datacenter"   # Default datacenter for standalone ESXi

  tasks:
    - name: Verify ESXi connection
      vmware_vm_info:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
      register: connection_test
      tags: always

    - name: Fail if connection failed
      ansible.builtin.fail:
        msg: "Failed to connect to ESXi host: {{ connection_test.msg | default('Unknown error') }}"
      when: connection_test.failed | default(false)
      tags: always

    - name: Get current VM info
      vmware_vm_info:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
      register: vm_info
      tags: info

    - name: Ensure VM exists
      ansible.builtin.fail:
        msg: "VM '{{ old_vm_name }}' not found on {{ esxi_host }}"
      when: not (vm_info.virtual_machines | selectattr('guest_name', 'equalto', old_vm_name) | list)
      tags: check

    - name: Get detailed VM state
      vmware_guest_info:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        datacenter: "{{ datacenter }}"  # Added required parameter
        name: "{{ old_vm_name }}"
      register: detailed_vm_info
      tags: power

    - name: Power off VM if running
      vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        datacenter: "{{ datacenter }}"  # Added required parameter
        name: "{{ old_vm_name }}"
        state: powered-off
        state_change_timeout: 300
        force: true
      register: power_action
      when: (vm_info.virtual_machines | selectattr('guest_name', 'equalto', old_vm_name) | first).power_state == 'poweredOn'
      tags: power
      ignore_errors: true  # Prevents playbook failure if power-off fails

    - name: Rename VM
      vmware_guest:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        datacenter: "{{ datacenter }}"  # Added required parameter
        name: "{{ old_vm_name }}"
        new_name: "{{ new_vm_name }}"
      register: rename_result
      tags: rename

    - name: Restore power state if changed
      vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ vault_esxi_user }}"
        password: "{{ vault_esxi_pass }}"
        validate_certs: "{{ validate_certs }}"
        datacenter: "{{ datacenter }}"  # Added required parameter
        name: "{{ new_vm_name }}"
        state: powered-on
        state_change_timeout: 300
      when:
        - power_action is defined
        - power_action.changed
      tags: power
